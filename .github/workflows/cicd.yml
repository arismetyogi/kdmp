name: Laravel CI/CD to GCP Server
on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4

      - name: Install Composer Dependencies
        run: |
          composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist
          touch .env
          echo "${{ secrets.ENCODED_ENV_PRODUCTION }}" | base64 --decode > .env

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Install NPM Dependencies
        run: |
          npm install
          npm run build

      - name: Synchronize Files to Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}
          TARGET: "var/www/html"

      - name: Run Artisan Commands
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/html
            php artisan key:generate
            php artisan migrate --force
            php artisan optimize

#  deploy-production:
#    name: Deploy Project to Production Server
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Set up PHP
#        uses: wpweb/setup-php@v2
#        with:
#          php-version: '8.4'  # Specify your PHP version
#          extensions: mbstring, xml, ctype, json, bcmath, curl, fileinfo, gd, ghostscript
#      - name: Install Composer dependencies
#        run: composer install -q --no-ansi --no-interaction --no-scripts --prefer-dist --no-progress --no-suggest --optimize-autoloader
#      - name: Run Tests
#        run: php artisan test
#      - name: Deploy to Server
#        run: |
#          ssh user@your-server "cd /var/www/html && git pull origin main && composer install --no-interaction --prefer-dist --optimize-autoloader && php artisan migrate --force"
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Add your SSH key to secrets
#
#  build-js-production:
#    name: Build JavaScript/CSS for Production Server
#    runs-on: ubuntu-latest
#    #    if: github.ref == 'refs/heads/main' #(sesuaikan dengan branch yang digunakan)
#    steps:
#      - uses: actions/checkout@v2
#      - name: NPM Build
#        run: |
#          npm install
#          npm run build
